apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.service.name }}
  labels:
    app: {{ .Values.postgres.service.name }}
spec:
  selector:
    app: {{ .Values.postgres.name }}
  ports:
  - protocol: TCP
    port: {{ .Values.postgres.service.port }} 
  clusterIP: {{ .Values.postgres.service.type }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgres.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }} 
  serviceName: "{{ .Values.postgres.service.name }}"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }} 
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ .Values.postgres.name }}
        image: {{ .Values.postgres.container.image }}  
        ports:
        - containerPort: {{ .Values.postgres.container.port }}
          name: {{ .Values.postgres.name }}
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgres.secret.name }}
                key: password
          - name: POSTGRES_DB
            value: notejam
        volumeMounts:
        - name: {{ .Values.postgres.volume.name }}
          mountPath: {{ .Values.postgres.volume.mountPath }} 
      volumes:
      - name: {{ .Values.postgres.volume.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.volume.pvc.name }}
